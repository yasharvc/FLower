
@{
	Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>@ViewData["Title"] - Flower web application</title>
	<link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900|Material+Icons|Material+Icons+Outlined|Material+Icons+Round|Material+Icons+Sharp" rel="stylesheet" type="text/css">
	<link href="https://cdn.jsdelivr.net/npm/@@mdi/font@@^5.0.0/css/materialdesignicons.min.css" rel="stylesheet" type="text/css">
	<link href="https://use.fontawesome.com/releases/v5.0.13/css/all.css" rel="stylesheet" type="text/css">
	<link href="https://cdn.jsdelivr.net/npm/ionicons@@^4.0.0/dist/css/ionicons.min.css" rel="stylesheet" type="text/css">
	<link href="https://cdn.jsdelivr.net/npm/eva-icons@@^1.0.0/style/eva-icons.css" rel="stylesheet" type="text/css">
	<link href="https://themify.me/wp-content/themes/themify-v32/themify-icons/themify-icons.css" rel="stylesheet" type="text/css">
	<link href="https://maxst.icons8.com/vue-static/landings/line-awesome/font-awesome-line-awesome/css/all.min.css" rel="stylesheet" type="text/css">
	<link href="https://cdn.jsdelivr.net/npm/animate.css@@^4.0.0/animate.min.css" rel="stylesheet" type="text/css">
	<link href="https://cdn.jsdelivr.net/npm/quasar@@1.12.1/dist/quasar.rtl.min.css" rel="stylesheet" type="text/css">
	<script src="~/application/fileutil.js"></script>
</head>
<body>
	<script>
		window.quasarConfig = {
			//brand: { primary: '#e46262' },
			//notify: { ...}, // default set of options for Notify Quasar plugin
			//loading: { ...}, // default set of options for Loading Quasar plugin
			//loadingBar: { ... }, // settings for LoadingBar Quasar plugin
			// ..and many more (check Installation card on each Quasar component/directive/plugin)
		}
	</script>
	<script src="https://cdn.jsdelivr.net/npm/quasar@@1.12.1/dist/quasar.ie.polyfills.umd.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/vue@@^2.0.0/dist/vue.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/quasar@@1.12.1/dist/quasar.umd.modern.min.js"></script>

	<div id="topmenu">
		<template>
			<q-layout view="hHh LpR fFf">

				<q-header reveal elevated class="bg-primary text-white" height-hint="98">
					<q-toolbar>
						<q-btn dense flat round icon="menu" @@click="left = !left"></q-btn>

						<q-toolbar-title>
							<q-avatar>
								<img src="https://cdn.quasar.dev/logo/svg/quasar-logo.svg">
							</q-avatar>
							Flower
						</q-toolbar-title>
					</q-toolbar>

					<q-tabs align="center">
						<q-tab v-for="t in tabs" :label="t.title" @@click="changeTab(t.tabIndex)"></q-tab>
					</q-tabs>
				</q-header>

				<q-drawer show-if-above v-model="left" side="left" behavior="desktop" bordered>
					<q-scroll-area class="fit" style="height: calc(100% - 150px); margin-top: 150px; border-right: 1px solid #ddd">
						<q-list v-for="(menuItem, index) in menuList" :key="index">

							<q-item clickable :active="menuItem.label === 'Outbox'" @@click="menuClick(menuItem.id)" v-ripple>
								<q-item-section avatar>
									<q-icon :name="menuItem.icon" />
								</q-item-section>
								<q-item-section>
									{{ menuItem.label }}
								</q-item-section>
							</q-item>

							<q-separator v-if="menuItem.separator" />

						</q-list>
					</q-scroll-area>
					<q-img class="absolute-top" src="https://cdn.quasar.dev/img/material.png" style="height: 150px">
						<div class="absolute-bottom bg-transparent">
							<q-avatar size="56px" class="q-mb-sm">
								<img src="https://cdn.quasar.dev/img/boy-avatar.png">
							</q-avatar>
							<div class="text-weight-bold">Razvan Stoenescu</div>
							<div>@@rstoenescu</div>
						</div>
					</q-img>
				</q-drawer>

				<q-page-container>
					<div class="q-pa-md q-gutter-sm" id="pages">
					</div>
				</q-page-container>
			</q-layout>
		</template>
		<template>
			<div class="q-pa-md q-gutter-sm">
				<q-dialog v-model="simpleSuccessDialog.show" persistent transition-show="scale" transition-hide="scale">
					<q-card class="bg-teal text-white" style="width: 300px">
						<q-card-section>
							<div class="text-h6">{{simpleSuccessDialog.title}}</div>
						</q-card-section>

						<q-card-section class="q-pt-none">
							{{simpleSuccessDialog.msg}}
						</q-card-section>

						<q-card-actions align="right" class="bg-white text-teal">
							<q-btn flat label="OK" v-close-popup />
						</q-card-actions>
					</q-card>
				</q-dialog>
				<q-dialog v-model="simpleDangerDialog.show" persistent transition-show="scale" transition-hide="scale">
					<q-card class="bg-red text-white" style="width: 300px">
						<q-card-section>
							<div class="text-h6">{{simpleDangerDialog.title}}</div>
						</q-card-section>

						<q-card-section class="q-pt-none">
							{{simpleDangerDialog.msg}}
						</q-card-section>

						<q-card-actions align="right" class="bg-white text-teal">
							<q-btn flat label="OK" v-close-popup />
						</q-card-actions>
					</q-card>
				</q-dialog>
			</div>
		</template>

		<q-inner-loading :showing="loadingDiv.show">
			<q-spinner-gears size="50px" color="primary" />
			<label>{{loadingDiv.msg}}</label>
		</q-inner-loading>
	</div>
	<script>
		const tabs = [
		];
		const menuList = [
			{
				icon: 'inbox',
				label: 'Inbox',
				separator: true,
				link: '/pages/index?id=Yashar',
				id: 1
			},
			{
				icon: 'send',
				label: 'Outbox',
				separator: false,
				link: '/pages/index?id=Samad',
				id: 2
			},
			{
				icon: 'delete',
				label: 'Trash',
				separator: false,
				link: '/pages/index?id=Sahar',
				id: 3
			},
			{
				icon: 'error',
				label: 'Spam',
				separator: true,
				link: '/pages/index?id=iii',
				id: 4
			},
			{
				icon: 'settings',
				label: 'Settings',
				separator: false,
				link: '/pages/index?id=tyr',
				id: 5
			},
			{
				icon: 'feedback',
				label: 'Send Feedback',
				separator: false,
				link: '/pages/index?id=oio',
				id: 6
			},
			{
				icon: 'help',
				iconColor: 'primary',
				label: 'Help',
				separator: false,
				link: '/pages/index?id=trrtg',
				id: 7
			}
		]
		var topmenu = new Vue({
			el: '#topmenu',
			data: function () {
				return {
					left: false,
					menuList,
					tab: 0,
					tabs,
					simpleSuccessDialog:{
						show: false,
						title: 'test',
						msg: "Test"
					},
					simpleDangerDialog : {
						show: false,
						title: 'test',
						msg: "Test"
					},
					loadingDiv:{
						show: false,
						msg: 'Please wait...'
					}
				};
			},
			methods: {
				changeTab: function (index) {
					this.tab = parseInt(index);
					console.log(index);
				},
				isTab: function (index) {
					debugger;
					return this.tab == index;
				},
				menuClick: function (id) {
					this.tabs.push({
						tabIndex: parseInt(id),
						title: menuList[id - 1].label
					});
					var pages = document.getElementById('pages');
					readHTML(menuList[id - 1].link + '&index=' + id, function (d, content) {
						var scripts = getScripts(content);
						pages.appendChild(makePage(content));
						scripts.forEach(m => eval(m));
					});
				},
				showSimpleSuccess: function (title, msg) {
					this.simpleSuccessDialog.title = title;
					this.simpleSuccessDialog.msg = msg;
					this.simpleSuccessDialog.show = true;
				},
				showSimpleDanger: function (title, msg) {
					this.simpleDangerDialog.title = title;
					this.simpleDangerDialog.msg = msg;
					this.simpleDangerDialog.show = true;
				},
				showLoading: function (msg) {
					this.loadingDiv.show = true;
					this.loadingDiv.msg = msg || 'Please wait...';
				},
				hideLoading: function () {
					this.loadingDiv.show = false;
					this.loadingDiv.msg = '';
				},
			}
		});
		function getScripts(tes) {
			var res = [];
			var start = 0;
			var end = 0;

			while (true) {
				start = tes.indexOf('<' + 'script>', end);
				if (start == -1)
					return res;
				start += 'lscriptl'.length
				end = tes.indexOf('</' + 'script>', start);
				if (end == -1)
					return res;
				res.push(tes.substring(start, end));
			}
		}

		function makePage(innerHTML) {
			var el = document.createElement('gcse:search');
			el.setAttribute("v-pre", "");
			el.innerHTML = innerHTML;
			return el;
		}
	</script>
</body>
</html>
